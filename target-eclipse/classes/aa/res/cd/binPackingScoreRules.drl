/*
 * Copyright 2010 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package aa.res.cd
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import aa.bb.BinPack;
import aa.bb.Container;
import aa.bb.Item;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################


rule "totalCapacityUsed"
    when
        $container : Container($capacity : capacity)
        $reqiredCapacityTotal : Number(intValue > $capacity) from accumulate(
            Item(
                container == $container,
                $requiredSize : size),
            sum($requiredSize)
        )
    then
        scoreHolder.addHardConstraintMatch(kcontext, $capacity - $reqiredCapacityTotal.intValue());
end



// ############################################################################
// Soft constraints
// ############################################################################

rule "containerCost"
    when
        $container : Container($used : used)
        exists Item(container == $container)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $used);
end
